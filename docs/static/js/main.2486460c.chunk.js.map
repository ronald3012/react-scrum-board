{"version":3,"sources":["Components/Header.js","Components/Task.js","Components/Column.js","Components/AddColumn.js","Board.js","index.js"],"names":["Header","Jumbotron","className","Task","name","id","draggable","onDragStart","e","dataTransfer","setData","target","Column","tasks","setTasks","onDragOver","preventDefault","classList","contains","style","border","onDragLeave","onDrop","stopPropagation","idEle","getData","column","Number","replace","newArray","JSON","parse","stringify","map","t","filter","Form","onSubmit","idColumn","parentElement","description","querySelector","value","task","Math","max","desc","reset","Group","controlId","Control","type","placeholder","autoComplete","AddColumn","columns","setColumns","Board","useState","c","App","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.2486460c.chunk.js","sourcesContent":["import React from 'react';\nimport {Jumbotron} from 'react-bootstrap'\n\nconst Header = () => {\n    return (\n        <Jumbotron className=\" pt-5 d-flex justify-content-center text-white\">\n            <h1>Scrum board</h1>\n        </Jumbotron>\n    )\n}\nexport default Header;","const Task = ({Task:{name,id}}) => {\n    const DragStart = (e)=>{\n        e.dataTransfer.setData('id', e.target.id);\n    }\n\n    return <li id={'task'+id} draggable=\"true\" onDragStart={DragStart}>{name}</li>\n}\n\nexport default Task;\n","import {Form} from 'react-bootstrap';\nimport Task from './Task';\n\n\nconst Column = ({Column:{id, name}, tasks,setTasks}) => {\n\n    const newTask = (e)=>{\n\n        e.preventDefault();\n        // Get column id\n        const idColumn = e.target.parentElement.id;\n        // Get descripcion\n        const description = e.target.querySelector('input').value;\n        // Get last id\n        const lastId = Math.max(...[...tasks].map(t => t.id)) +1;\n        const task = {id:lastId,name:description,desc:'Description',column:Number(idColumn.replace('column',''))};\n\n        setTasks([...tasks,task]);\n        e.target.reset();\n    }\n\n   \n    const hover = (e) =>{\n        e.preventDefault(); \n        if(e.target.classList.contains('column')){\n            e.target.style.border = 'dotted 3px darkgray';\n        }\n    }\n    const leave= (e) =>{\n        e.preventDefault();\n        e.target.style.border = 'none';\n    }\n    const drop = (e)=>{\n\n        e.stopPropagation();\n\n        if(e.target.classList.contains('column')){\n\n            const idEle = e.dataTransfer.getData('id');\n            e.target.style.border = 'none';\n            // change task column\n            const column = Number(e.target.id.replace('column',''));\n            const newArray = JSON.parse(JSON.stringify(tasks));\n            newArray.map(t=> {\n                    if (t.id === Number(idEle.replace('task',''))) {\n                        t.column = column;\n                    }\n                return t\n            })\n            setTasks(newArray);\n        }\n    }\n\n    return(\n        <div className=\"col bg-white column\" \n            onDragOver={hover} \n            onDragLeave={leave}\n            onDrop={drop}\n            id={'column'+id}\n        >\n            <h3>{name}</h3>\n            <ul>\n                {tasks\n                    .filter(t => t.column === id)\n                        .map(t=> <Task key={t.id} Task={t} />)\n                   \n                }\n            </ul>\n            <Form className=\"formTask\" onSubmit={newTask}>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Control type=\"text\" placeholder=\"Write a task:\" className=\"border-0 outline-none\" autoComplete='off' />\n                </Form.Group>\n            </Form>\n        </div>\n    )\n}\n\n\nexport default Column;","import React from 'react';\nimport {Form} from 'react-bootstrap';\n\nconst AddColumn = ({columns,setColumns}) => {\n\n    const newColumn = (e)=>{\n\n        e.preventDefault();\n        // Get descripcion\n        const name = e.target.querySelector('input').value;\n        // Get last id\n        const lastId = Math.max(...[...columns].map(t => t.id)) +1;\n        const column = {id:lastId,name};\n\n        setColumns([...columns,column]);\n        e.target.reset();\n    }\n\n    return (\n        <div className=\"col column\">\n            <Form onSubmit={newColumn}>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Control type=\"text\" placeholder=\"New column\" autoComplete='off' />\n                </Form.Group>\n            </Form>\n        </div>\n    )\n}\n\nexport default AddColumn;\n","import {useState} from 'react';\n\nimport Header from './Components/Header';\nimport Column from './Components/Column'\nimport AddColumn from './Components/AddColumn';\n\nconst Board = () => {\n\n    const [columns, setColumns] = useState([\n        {id:1,name:'To Do'},\n        {id:2,name:'Doing'},\n    ]);\n\n    const [tasks, setTasks] = useState([\n        {id:1,name:'Task 1',desc:'Description',column:1},\n        {id:2,name:'Task 2',desc:'Description',column:1},\n        {id:3,name:'Task 3',desc:'Description',column:2},\n    ]);\n\n\n    return (\n        <div className=\"container-fluid\">\n            <Header />\n            <div className=\"columns row flex-nowrap\">\n                {\n                    columns.map(c=> <Column  \n                                        Column={c} \n                                        key={c.id}  \n                                        tasks={tasks} \n                                        setTasks={setTasks} \n                                    />)\n                } \n                \n                <AddColumn columns={columns} setColumns={setColumns} />\n            </div>\n        </div>\n    )\n}\n\nexport default Board;\n","import { render } from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Styles/app.css';\nimport Board from './Board';\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n                <Board />\n        </div>\n    )\n}\n\nconst rootElement = document.getElementById('root')\nrender(<App />, rootElement)"],"sourceRoot":""}